@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix ex: <http://example.com/>.
@base <http://example.com/ns#>.

<#LogicalSource> a rml:LogicalSource ;
  rml:source "../input-1/input.json" ;
  rml:referenceFormulation ql:JSONPath ;
  rml:iterator "$"
  rml:field [
    rml:name "name" ;
    rml:reference "$.labName" ] ;
  rml:field [
    rml:name "article" ;
    rml:reference "$.article" 
    rml:field [
      rml:name "title" ;
      rml:reference "$.title" ] ;
    rml:field [
      rml:name "tagscsv" ;
      rml:reference "$.tags" 
      rml:field [
        rml:name "tag" ;
# change reference formulation to split the comma-separated string and treat the result as a multi-value
        rml:referenceFormulation ql:Split ;
        rml:reference ", " ] 
      ] ;
    rml:field [
      rml:name "author" ;
      rml:reference "$.authors.[*].name" 
      rml:field [
        rml:name "firstname" ;
# change reference formulation to split the comma-separated string and treat the result as a composed value
        rml:referenceFormulation ql:CSV ;
        rml:reference "1" ] ;
      rml:field [
        rml:name "lastname" ;
        rml:referenceFormulation ql:CSV ;
        rml:reference "0" ] ;
      ] ;
    ] .

<#Labs> a rr:TriplesMap ;
  rml:logicalSource <#LogicalSource> ;   
  rr:subjectMap [
    rr:template "http://example.com/lab/{name}";
  ] ;
  rr:predicateObjectMap [
    rr:predicate ex:hasArticle ;
    rr:objectMap [ rr:template "http://example.com/article/{article.title}" ] ;
  ] .

<#Article> a rr:TriplesMap ;
  rml:logicalSource <#LogicalSource> ;   
  rr:subjectMap [
    rr:template "http://example.com/article/{article.title}";
  ] ;
  rr:predicateObjectMap [
    rr:predicate ex:hasAuthor ;
    rr:termType xrr:RdfList ;
    xrr:nestedTermMap [ rr:template "http://example.com/author/{article.author.firstname}" ] ;
  ] ;
  rr:predicateObjectMap [
    rr:predicate ex:hasTags ;
    rr:termType xrr:RdfBag ;
    xrr:nestedTermMap [ rr:template "http://example.com/author/{article.tagscsv.tag}" ] ;
  ] .

<#Tags> a rr:TriplesMap ;
  rml:logicalSource <#LogicalSource> ;   
  rr:subjectMap [
    rr:template "http://example.com/author/{article.tagscsv.tag}";
  ] ;
  rr:predicateObjectMap [
    rr:predicate ex:label ;
    rr:objectMap [ rml:reference "article.tagscsv.tag" ] ;
  ] .

<#Authors> a rr:TriplesMap ;
  rml:logicalSource <#LogicalSource> ;   
  rr:subjectMap [
    rr:template "http://example.com/author/{article.author.firstname}";
  ] ;
  rr:predicateObjectMap [
    rr:predicate ex:fullName ;
    rr:objectMap [ rml:reference "article.author" ] ;
  ] .
